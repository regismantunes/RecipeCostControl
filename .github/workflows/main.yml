on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      ACR_NAME: recipecostcontrolapi
      REPOSITORY: recipecostcontrol

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Recipe Cost Control Application
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '9.x'
    
    - name: Restore API dependencies
      run: dotnet restore RecipeCostControl.API/RecipeCostControl.API.csproj
      
    - name: Build
      run: dotnet build -c Release RecipeCostControl.API/RecipeCostControl.API.csproj
    
    - name: Testes
      run: dotnet test -c Release RecipeCostControl.Tests/RecipeCostControl.Tests.csproj

    - name: Create publish directory
      run: sudo mkdir -p /app/publish && sudo chmod -R 777 /app/publish
    
    - name: Deploy
      if: github.ref == 'refs/heads/main'
      run: dotnet publish -c Release RecipeCostControl.API/RecipeCostControl.API.csproj -o /app/publish /p:PublishSingleFile=true /p:IncludeSymbols=false

    - name: Build and push Docker image to ACR
      uses: azure/docker-login@v2
      with:
        login-server: ${{ secrets.ACR_LOGIN_SERVER }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}
    
    - name: Build and tag Docker image
      run: |
          docker build -t ${{ env.ACR_NAME }}.azurecr.io/${{ env.REPOSITORY }}:${{ github.sha }} -f RecipeCostControl.API/Dockerfile .
          docker tag ${{ env.ACR_NAME }}.azurecr.io/${{ env.REPOSITORY }}:${{ github.sha }} ${{ env.ACR_NAME }}.azurecr.io/${{ env.REPOSITORY }}:latest
    
    - name: Push Docker image to ACR
      run: |
          docker push ${{ env.ACR_NAME }}.azurecr.io/${{ env.REPOSITORY }}:${{ github.sha }}
          docker push ${{ env.ACR_NAME }}.azurecr.io/${{ env.REPOSITORY }}:latest

    - name: Deploy to Azure App Service
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ secrets.AZURE_APP_SERVICE_NAME }}
        slot-name: 'production' # Or your slot name
        package: /app/publish # Path to the published output (even though we're using a container)
        images: ${{ env.ACR_NAME }}.azurecr.io/${{ env.REPOSITORY }}:latest

    - name: Copy SQLite Database to Azure Files
      uses: azure/CLI@v1
      with:
        azcli-script: |
          az storage fs upload -s data/recipecostcontrol.db --account-name ${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }} --account-key ${{ secrets.AZURE_STORAGE_ACCOUNT_KEY }} --file-system ${{ secrets.AZURE_STORAGE_FILE_SYSTEM_NAME }} --destination-path your_database.db --overwrite    
